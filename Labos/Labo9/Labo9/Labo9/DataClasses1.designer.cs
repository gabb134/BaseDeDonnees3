#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Labo9
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BDVoyagesMarrero")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void Insertclient(client instance);
    partial void Updateclient(client instance);
    partial void Deleteclient(client instance);
    partial void Insertcontrat(contrat instance);
    partial void Updatecontrat(contrat instance);
    partial void Deletecontrat(contrat instance);
    partial void Insertemploye(employe instance);
    partial void Updateemploye(employe instance);
    partial void Deleteemploye(employe instance);
    partial void InsertfaitLeVoyage(faitLeVoyage instance);
    partial void UpdatefaitLeVoyage(faitLeVoyage instance);
    partial void DeletefaitLeVoyage(faitLeVoyage instance);
    partial void Inserthotel(hotel instance);
    partial void Updatehotel(hotel instance);
    partial void Deletehotel(hotel instance);
    partial void Insertvoyage(voyage instance);
    partial void Updatevoyage(voyage instance);
    partial void Deletevoyage(voyage instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Labo9.Properties.Settings.Default.BDVoyagesMarreroConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<client> client
		{
			get
			{
				return this.GetTable<client>();
			}
		}
		
		public System.Data.Linq.Table<contrat> contrat
		{
			get
			{
				return this.GetTable<contrat>();
			}
		}
		
		public System.Data.Linq.Table<employe> employe
		{
			get
			{
				return this.GetTable<employe>();
			}
		}
		
		public System.Data.Linq.Table<faitLeVoyage> faitLeVoyage
		{
			get
			{
				return this.GetTable<faitLeVoyage>();
			}
		}
		
		public System.Data.Linq.Table<hotel> hotel
		{
			get
			{
				return this.GetTable<hotel>();
			}
		}
		
		public System.Data.Linq.Table<voyage> voyage
		{
			get
			{
				return this.GetTable<voyage>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.client")]
	public partial class client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _cliNo;
		
		private string _cliPrenom;
		
		private string _cliNom;
		
		private string _cliRue;
		
		private string _cliVille;
		
		private string _cliTelephone;
		
		private EntitySet<contrat> _contrat;
		
		private EntitySet<faitLeVoyage> _faitLeVoyage;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncliNoChanging(decimal value);
    partial void OncliNoChanged();
    partial void OncliPrenomChanging(string value);
    partial void OncliPrenomChanged();
    partial void OncliNomChanging(string value);
    partial void OncliNomChanged();
    partial void OncliRueChanging(string value);
    partial void OncliRueChanged();
    partial void OncliVilleChanging(string value);
    partial void OncliVilleChanged();
    partial void OncliTelephoneChanging(string value);
    partial void OncliTelephoneChanged();
    #endregion
		
		public client()
		{
			this._contrat = new EntitySet<contrat>(new Action<contrat>(this.attach_contrat), new Action<contrat>(this.detach_contrat));
			this._faitLeVoyage = new EntitySet<faitLeVoyage>(new Action<faitLeVoyage>(this.attach_faitLeVoyage), new Action<faitLeVoyage>(this.detach_faitLeVoyage));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cliNo", DbType="Decimal(6,0) NOT NULL", IsPrimaryKey=true)]
		public decimal cliNo
		{
			get
			{
				return this._cliNo;
			}
			set
			{
				if ((this._cliNo != value))
				{
					this.OncliNoChanging(value);
					this.SendPropertyChanging();
					this._cliNo = value;
					this.SendPropertyChanged("cliNo");
					this.OncliNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cliPrenom", DbType="VarChar(20)")]
		public string cliPrenom
		{
			get
			{
				return this._cliPrenom;
			}
			set
			{
				if ((this._cliPrenom != value))
				{
					this.OncliPrenomChanging(value);
					this.SendPropertyChanging();
					this._cliPrenom = value;
					this.SendPropertyChanged("cliPrenom");
					this.OncliPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cliNom", DbType="VarChar(15)")]
		public string cliNom
		{
			get
			{
				return this._cliNom;
			}
			set
			{
				if ((this._cliNom != value))
				{
					this.OncliNomChanging(value);
					this.SendPropertyChanging();
					this._cliNom = value;
					this.SendPropertyChanged("cliNom");
					this.OncliNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cliRue", DbType="VarChar(30)")]
		public string cliRue
		{
			get
			{
				return this._cliRue;
			}
			set
			{
				if ((this._cliRue != value))
				{
					this.OncliRueChanging(value);
					this.SendPropertyChanging();
					this._cliRue = value;
					this.SendPropertyChanged("cliRue");
					this.OncliRueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cliVille", DbType="VarChar(12)")]
		public string cliVille
		{
			get
			{
				return this._cliVille;
			}
			set
			{
				if ((this._cliVille != value))
				{
					this.OncliVilleChanging(value);
					this.SendPropertyChanging();
					this._cliVille = value;
					this.SendPropertyChanged("cliVille");
					this.OncliVilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cliTelephone", DbType="Char(12)")]
		public string cliTelephone
		{
			get
			{
				return this._cliTelephone;
			}
			set
			{
				if ((this._cliTelephone != value))
				{
					this.OncliTelephoneChanging(value);
					this.SendPropertyChanging();
					this._cliTelephone = value;
					this.SendPropertyChanged("cliTelephone");
					this.OncliTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_contrat", Storage="_contrat", ThisKey="cliNo", OtherKey="cliNo")]
		public EntitySet<contrat> contrat
		{
			get
			{
				return this._contrat;
			}
			set
			{
				this._contrat.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_faitLeVoyage", Storage="_faitLeVoyage", ThisKey="cliNo", OtherKey="cliNo")]
		public EntitySet<faitLeVoyage> faitLeVoyage
		{
			get
			{
				return this._faitLeVoyage;
			}
			set
			{
				this._faitLeVoyage.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_contrat(contrat entity)
		{
			this.SendPropertyChanging();
			entity.client = this;
		}
		
		private void detach_contrat(contrat entity)
		{
			this.SendPropertyChanging();
			entity.client = null;
		}
		
		private void attach_faitLeVoyage(faitLeVoyage entity)
		{
			this.SendPropertyChanging();
			entity.client = this;
		}
		
		private void detach_faitLeVoyage(faitLeVoyage entity)
		{
			this.SendPropertyChanging();
			entity.client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.contrat")]
	public partial class contrat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _conNo;
		
		private System.Nullable<System.DateTime> _conDate;
		
		private System.Nullable<decimal> _conAcompte;
		
		private System.Nullable<decimal> _conMontant;
		
		private System.Nullable<decimal> _ConPaye;
		
		private System.Nullable<decimal> _conTypeOcc;
		
		private System.Nullable<decimal> _empNo;
		
		private System.Nullable<decimal> _voyNo;
		
		private System.Nullable<decimal> _cliNo;
		
		private EntitySet<faitLeVoyage> _faitLeVoyage;
		
		private EntityRef<client> _client;
		
		private EntityRef<employe> _employe;
		
		private EntityRef<voyage> _voyage;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnconNoChanging(decimal value);
    partial void OnconNoChanged();
    partial void OnconDateChanging(System.Nullable<System.DateTime> value);
    partial void OnconDateChanged();
    partial void OnconAcompteChanging(System.Nullable<decimal> value);
    partial void OnconAcompteChanged();
    partial void OnconMontantChanging(System.Nullable<decimal> value);
    partial void OnconMontantChanged();
    partial void OnConPayeChanging(System.Nullable<decimal> value);
    partial void OnConPayeChanged();
    partial void OnconTypeOccChanging(System.Nullable<decimal> value);
    partial void OnconTypeOccChanged();
    partial void OnempNoChanging(System.Nullable<decimal> value);
    partial void OnempNoChanged();
    partial void OnvoyNoChanging(System.Nullable<decimal> value);
    partial void OnvoyNoChanged();
    partial void OncliNoChanging(System.Nullable<decimal> value);
    partial void OncliNoChanged();
    #endregion
		
		public contrat()
		{
			this._faitLeVoyage = new EntitySet<faitLeVoyage>(new Action<faitLeVoyage>(this.attach_faitLeVoyage), new Action<faitLeVoyage>(this.detach_faitLeVoyage));
			this._client = default(EntityRef<client>);
			this._employe = default(EntityRef<employe>);
			this._voyage = default(EntityRef<voyage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_conNo", DbType="Decimal(6,0) NOT NULL", IsPrimaryKey=true)]
		public decimal conNo
		{
			get
			{
				return this._conNo;
			}
			set
			{
				if ((this._conNo != value))
				{
					this.OnconNoChanging(value);
					this.SendPropertyChanging();
					this._conNo = value;
					this.SendPropertyChanged("conNo");
					this.OnconNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_conDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> conDate
		{
			get
			{
				return this._conDate;
			}
			set
			{
				if ((this._conDate != value))
				{
					this.OnconDateChanging(value);
					this.SendPropertyChanging();
					this._conDate = value;
					this.SendPropertyChanged("conDate");
					this.OnconDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_conAcompte", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> conAcompte
		{
			get
			{
				return this._conAcompte;
			}
			set
			{
				if ((this._conAcompte != value))
				{
					this.OnconAcompteChanging(value);
					this.SendPropertyChanging();
					this._conAcompte = value;
					this.SendPropertyChanged("conAcompte");
					this.OnconAcompteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_conMontant", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> conMontant
		{
			get
			{
				return this._conMontant;
			}
			set
			{
				if ((this._conMontant != value))
				{
					this.OnconMontantChanging(value);
					this.SendPropertyChanging();
					this._conMontant = value;
					this.SendPropertyChanged("conMontant");
					this.OnconMontantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConPaye", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> ConPaye
		{
			get
			{
				return this._ConPaye;
			}
			set
			{
				if ((this._ConPaye != value))
				{
					this.OnConPayeChanging(value);
					this.SendPropertyChanging();
					this._ConPaye = value;
					this.SendPropertyChanged("ConPaye");
					this.OnConPayeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_conTypeOcc", DbType="Decimal(1,0)")]
		public System.Nullable<decimal> conTypeOcc
		{
			get
			{
				return this._conTypeOcc;
			}
			set
			{
				if ((this._conTypeOcc != value))
				{
					this.OnconTypeOccChanging(value);
					this.SendPropertyChanging();
					this._conTypeOcc = value;
					this.SendPropertyChanged("conTypeOcc");
					this.OnconTypeOccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empNo", DbType="Decimal(4,0)")]
		public System.Nullable<decimal> empNo
		{
			get
			{
				return this._empNo;
			}
			set
			{
				if ((this._empNo != value))
				{
					if (this._employe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnempNoChanging(value);
					this.SendPropertyChanging();
					this._empNo = value;
					this.SendPropertyChanged("empNo");
					this.OnempNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voyNo", DbType="Decimal(4,0)")]
		public System.Nullable<decimal> voyNo
		{
			get
			{
				return this._voyNo;
			}
			set
			{
				if ((this._voyNo != value))
				{
					if (this._voyage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnvoyNoChanging(value);
					this.SendPropertyChanging();
					this._voyNo = value;
					this.SendPropertyChanged("voyNo");
					this.OnvoyNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cliNo", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> cliNo
		{
			get
			{
				return this._cliNo;
			}
			set
			{
				if ((this._cliNo != value))
				{
					if (this._client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncliNoChanging(value);
					this.SendPropertyChanging();
					this._cliNo = value;
					this.SendPropertyChanged("cliNo");
					this.OncliNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contrat_faitLeVoyage", Storage="_faitLeVoyage", ThisKey="conNo", OtherKey="conNo")]
		public EntitySet<faitLeVoyage> faitLeVoyage
		{
			get
			{
				return this._faitLeVoyage;
			}
			set
			{
				this._faitLeVoyage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_contrat", Storage="_client", ThisKey="cliNo", OtherKey="cliNo", IsForeignKey=true)]
		public client client
		{
			get
			{
				return this._client.Entity;
			}
			set
			{
				client previousValue = this._client.Entity;
				if (((previousValue != value) 
							|| (this._client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._client.Entity = null;
						previousValue.contrat.Remove(this);
					}
					this._client.Entity = value;
					if ((value != null))
					{
						value.contrat.Add(this);
						this._cliNo = value.cliNo;
					}
					else
					{
						this._cliNo = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employe_contrat", Storage="_employe", ThisKey="empNo", OtherKey="empNo", IsForeignKey=true)]
		public employe employe
		{
			get
			{
				return this._employe.Entity;
			}
			set
			{
				employe previousValue = this._employe.Entity;
				if (((previousValue != value) 
							|| (this._employe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employe.Entity = null;
						previousValue.contrat.Remove(this);
					}
					this._employe.Entity = value;
					if ((value != null))
					{
						value.contrat.Add(this);
						this._empNo = value.empNo;
					}
					else
					{
						this._empNo = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("employe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="voyage_contrat", Storage="_voyage", ThisKey="voyNo", OtherKey="voyNo", IsForeignKey=true)]
		public voyage voyage
		{
			get
			{
				return this._voyage.Entity;
			}
			set
			{
				voyage previousValue = this._voyage.Entity;
				if (((previousValue != value) 
							|| (this._voyage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._voyage.Entity = null;
						previousValue.contrat.Remove(this);
					}
					this._voyage.Entity = value;
					if ((value != null))
					{
						value.contrat.Add(this);
						this._voyNo = value.voyNo;
					}
					else
					{
						this._voyNo = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("voyage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_faitLeVoyage(faitLeVoyage entity)
		{
			this.SendPropertyChanging();
			entity.contrat = this;
		}
		
		private void detach_faitLeVoyage(faitLeVoyage entity)
		{
			this.SendPropertyChanging();
			entity.contrat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.employe")]
	public partial class employe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _empNo;
		
		private string _empPrenom;
		
		private string _empNom;
		
		private string _empEmploi;
		
		private System.Nullable<decimal> _empSal;
		
		private System.Nullable<decimal> _empComm;
		
		private System.Nullable<decimal> _empSup;
		
		private string _empBureau;
		
		private EntitySet<contrat> _contrat;
		
		private EntitySet<voyage> _voyage;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempNoChanging(decimal value);
    partial void OnempNoChanged();
    partial void OnempPrenomChanging(string value);
    partial void OnempPrenomChanged();
    partial void OnempNomChanging(string value);
    partial void OnempNomChanged();
    partial void OnempEmploiChanging(string value);
    partial void OnempEmploiChanged();
    partial void OnempSalChanging(System.Nullable<decimal> value);
    partial void OnempSalChanged();
    partial void OnempCommChanging(System.Nullable<decimal> value);
    partial void OnempCommChanged();
    partial void OnempSupChanging(System.Nullable<decimal> value);
    partial void OnempSupChanged();
    partial void OnempBureauChanging(string value);
    partial void OnempBureauChanged();
    #endregion
		
		public employe()
		{
			this._contrat = new EntitySet<contrat>(new Action<contrat>(this.attach_contrat), new Action<contrat>(this.detach_contrat));
			this._voyage = new EntitySet<voyage>(new Action<voyage>(this.attach_voyage), new Action<voyage>(this.detach_voyage));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empNo", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal empNo
		{
			get
			{
				return this._empNo;
			}
			set
			{
				if ((this._empNo != value))
				{
					this.OnempNoChanging(value);
					this.SendPropertyChanging();
					this._empNo = value;
					this.SendPropertyChanged("empNo");
					this.OnempNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empPrenom", DbType="VarChar(20)")]
		public string empPrenom
		{
			get
			{
				return this._empPrenom;
			}
			set
			{
				if ((this._empPrenom != value))
				{
					this.OnempPrenomChanging(value);
					this.SendPropertyChanging();
					this._empPrenom = value;
					this.SendPropertyChanged("empPrenom");
					this.OnempPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empNom", DbType="VarChar(15)")]
		public string empNom
		{
			get
			{
				return this._empNom;
			}
			set
			{
				if ((this._empNom != value))
				{
					this.OnempNomChanging(value);
					this.SendPropertyChanging();
					this._empNom = value;
					this.SendPropertyChanged("empNom");
					this.OnempNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empEmploi", DbType="Char(2)")]
		public string empEmploi
		{
			get
			{
				return this._empEmploi;
			}
			set
			{
				if ((this._empEmploi != value))
				{
					this.OnempEmploiChanging(value);
					this.SendPropertyChanging();
					this._empEmploi = value;
					this.SendPropertyChanged("empEmploi");
					this.OnempEmploiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empSal", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> empSal
		{
			get
			{
				return this._empSal;
			}
			set
			{
				if ((this._empSal != value))
				{
					this.OnempSalChanging(value);
					this.SendPropertyChanging();
					this._empSal = value;
					this.SendPropertyChanged("empSal");
					this.OnempSalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empComm", DbType="Decimal(3,3)")]
		public System.Nullable<decimal> empComm
		{
			get
			{
				return this._empComm;
			}
			set
			{
				if ((this._empComm != value))
				{
					this.OnempCommChanging(value);
					this.SendPropertyChanging();
					this._empComm = value;
					this.SendPropertyChanged("empComm");
					this.OnempCommChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empSup", DbType="Decimal(4,0)")]
		public System.Nullable<decimal> empSup
		{
			get
			{
				return this._empSup;
			}
			set
			{
				if ((this._empSup != value))
				{
					this.OnempSupChanging(value);
					this.SendPropertyChanging();
					this._empSup = value;
					this.SendPropertyChanged("empSup");
					this.OnempSupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empBureau", DbType="Char(3)")]
		public string empBureau
		{
			get
			{
				return this._empBureau;
			}
			set
			{
				if ((this._empBureau != value))
				{
					this.OnempBureauChanging(value);
					this.SendPropertyChanging();
					this._empBureau = value;
					this.SendPropertyChanged("empBureau");
					this.OnempBureauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employe_contrat", Storage="_contrat", ThisKey="empNo", OtherKey="empNo")]
		public EntitySet<contrat> contrat
		{
			get
			{
				return this._contrat;
			}
			set
			{
				this._contrat.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employe_voyage", Storage="_voyage", ThisKey="empNo", OtherKey="empNo")]
		public EntitySet<voyage> voyage
		{
			get
			{
				return this._voyage;
			}
			set
			{
				this._voyage.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_contrat(contrat entity)
		{
			this.SendPropertyChanging();
			entity.employe = this;
		}
		
		private void detach_contrat(contrat entity)
		{
			this.SendPropertyChanging();
			entity.employe = null;
		}
		
		private void attach_voyage(voyage entity)
		{
			this.SendPropertyChanging();
			entity.employe = this;
		}
		
		private void detach_voyage(voyage entity)
		{
			this.SendPropertyChanging();
			entity.employe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.faitLeVoyage")]
	public partial class faitLeVoyage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _conNo;
		
		private decimal _cliNo;
		
		private EntityRef<client> _client;
		
		private EntityRef<contrat> _contrat;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnconNoChanging(decimal value);
    partial void OnconNoChanged();
    partial void OncliNoChanging(decimal value);
    partial void OncliNoChanged();
    #endregion
		
		public faitLeVoyage()
		{
			this._client = default(EntityRef<client>);
			this._contrat = default(EntityRef<contrat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_conNo", DbType="Decimal(6,0) NOT NULL", IsPrimaryKey=true)]
		public decimal conNo
		{
			get
			{
				return this._conNo;
			}
			set
			{
				if ((this._conNo != value))
				{
					if (this._contrat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnconNoChanging(value);
					this.SendPropertyChanging();
					this._conNo = value;
					this.SendPropertyChanged("conNo");
					this.OnconNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cliNo", DbType="Decimal(6,0) NOT NULL", IsPrimaryKey=true)]
		public decimal cliNo
		{
			get
			{
				return this._cliNo;
			}
			set
			{
				if ((this._cliNo != value))
				{
					if (this._client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncliNoChanging(value);
					this.SendPropertyChanging();
					this._cliNo = value;
					this.SendPropertyChanged("cliNo");
					this.OncliNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_faitLeVoyage", Storage="_client", ThisKey="cliNo", OtherKey="cliNo", IsForeignKey=true)]
		public client client
		{
			get
			{
				return this._client.Entity;
			}
			set
			{
				client previousValue = this._client.Entity;
				if (((previousValue != value) 
							|| (this._client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._client.Entity = null;
						previousValue.faitLeVoyage.Remove(this);
					}
					this._client.Entity = value;
					if ((value != null))
					{
						value.faitLeVoyage.Add(this);
						this._cliNo = value.cliNo;
					}
					else
					{
						this._cliNo = default(decimal);
					}
					this.SendPropertyChanged("client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contrat_faitLeVoyage", Storage="_contrat", ThisKey="conNo", OtherKey="conNo", IsForeignKey=true)]
		public contrat contrat
		{
			get
			{
				return this._contrat.Entity;
			}
			set
			{
				contrat previousValue = this._contrat.Entity;
				if (((previousValue != value) 
							|| (this._contrat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._contrat.Entity = null;
						previousValue.faitLeVoyage.Remove(this);
					}
					this._contrat.Entity = value;
					if ((value != null))
					{
						value.faitLeVoyage.Add(this);
						this._conNo = value.conNo;
					}
					else
					{
						this._conNo = default(decimal);
					}
					this.SendPropertyChanged("contrat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.hotel")]
	public partial class hotel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _hotNo;
		
		private string _hotNom;
		
		private System.Nullable<decimal> _hotCote;
		
		private System.Nullable<char> _hotPiscine;
		
		private System.Nullable<decimal> _hotNbChambreTot;
		
		private EntitySet<voyage> _voyage;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhotNoChanging(decimal value);
    partial void OnhotNoChanged();
    partial void OnhotNomChanging(string value);
    partial void OnhotNomChanged();
    partial void OnhotCoteChanging(System.Nullable<decimal> value);
    partial void OnhotCoteChanged();
    partial void OnhotPiscineChanging(System.Nullable<char> value);
    partial void OnhotPiscineChanged();
    partial void OnhotNbChambreTotChanging(System.Nullable<decimal> value);
    partial void OnhotNbChambreTotChanged();
    #endregion
		
		public hotel()
		{
			this._voyage = new EntitySet<voyage>(new Action<voyage>(this.attach_voyage), new Action<voyage>(this.detach_voyage));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hotNo", DbType="Decimal(5,0) NOT NULL", IsPrimaryKey=true)]
		public decimal hotNo
		{
			get
			{
				return this._hotNo;
			}
			set
			{
				if ((this._hotNo != value))
				{
					this.OnhotNoChanging(value);
					this.SendPropertyChanging();
					this._hotNo = value;
					this.SendPropertyChanged("hotNo");
					this.OnhotNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hotNom", DbType="Char(25)")]
		public string hotNom
		{
			get
			{
				return this._hotNom;
			}
			set
			{
				if ((this._hotNom != value))
				{
					this.OnhotNomChanging(value);
					this.SendPropertyChanging();
					this._hotNom = value;
					this.SendPropertyChanged("hotNom");
					this.OnhotNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hotCote", DbType="Decimal(1,0)")]
		public System.Nullable<decimal> hotCote
		{
			get
			{
				return this._hotCote;
			}
			set
			{
				if ((this._hotCote != value))
				{
					this.OnhotCoteChanging(value);
					this.SendPropertyChanging();
					this._hotCote = value;
					this.SendPropertyChanged("hotCote");
					this.OnhotCoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hotPiscine", DbType="Char(1)")]
		public System.Nullable<char> hotPiscine
		{
			get
			{
				return this._hotPiscine;
			}
			set
			{
				if ((this._hotPiscine != value))
				{
					this.OnhotPiscineChanging(value);
					this.SendPropertyChanging();
					this._hotPiscine = value;
					this.SendPropertyChanged("hotPiscine");
					this.OnhotPiscineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hotNbChambreTot", DbType="Decimal(3,0)")]
		public System.Nullable<decimal> hotNbChambreTot
		{
			get
			{
				return this._hotNbChambreTot;
			}
			set
			{
				if ((this._hotNbChambreTot != value))
				{
					this.OnhotNbChambreTotChanging(value);
					this.SendPropertyChanging();
					this._hotNbChambreTot = value;
					this.SendPropertyChanged("hotNbChambreTot");
					this.OnhotNbChambreTotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hotel_voyage", Storage="_voyage", ThisKey="hotNo", OtherKey="hotno")]
		public EntitySet<voyage> voyage
		{
			get
			{
				return this._voyage;
			}
			set
			{
				this._voyage.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_voyage(voyage entity)
		{
			this.SendPropertyChanging();
			entity.hotel = this;
		}
		
		private void detach_voyage(voyage entity)
		{
			this.SendPropertyChanging();
			entity.hotel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.voyage")]
	public partial class voyage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _voyNo;
		
		private string _voyDestination;
		
		private System.Nullable<System.DateTime> _voyDateDepart;
		
		private System.Nullable<System.DateTime> _voyDateArrive;
		
		private System.Nullable<decimal> _voyRepas;
		
		private System.Nullable<decimal> _voyNbPlace;
		
		private string _voyActivite;
		
		private System.Nullable<decimal> _empNo;
		
		private System.Nullable<decimal> _hotno;
		
		private System.Nullable<decimal> _tarifSimple;
		
		private System.Nullable<decimal> _tarifDouble;
		
		private System.Nullable<decimal> _tarifTriple;
		
		private System.Nullable<decimal> _tarifQuadruple;
		
		private System.Nullable<decimal> _NbChambreRes;
		
		private EntitySet<contrat> _contrat;
		
		private EntityRef<employe> _employe;
		
		private EntityRef<hotel> _hotel;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnvoyNoChanging(decimal value);
    partial void OnvoyNoChanged();
    partial void OnvoyDestinationChanging(string value);
    partial void OnvoyDestinationChanged();
    partial void OnvoyDateDepartChanging(System.Nullable<System.DateTime> value);
    partial void OnvoyDateDepartChanged();
    partial void OnvoyDateArriveChanging(System.Nullable<System.DateTime> value);
    partial void OnvoyDateArriveChanged();
    partial void OnvoyRepasChanging(System.Nullable<decimal> value);
    partial void OnvoyRepasChanged();
    partial void OnvoyNbPlaceChanging(System.Nullable<decimal> value);
    partial void OnvoyNbPlaceChanged();
    partial void OnvoyActiviteChanging(string value);
    partial void OnvoyActiviteChanged();
    partial void OnempNoChanging(System.Nullable<decimal> value);
    partial void OnempNoChanged();
    partial void OnhotnoChanging(System.Nullable<decimal> value);
    partial void OnhotnoChanged();
    partial void OntarifSimpleChanging(System.Nullable<decimal> value);
    partial void OntarifSimpleChanged();
    partial void OntarifDoubleChanging(System.Nullable<decimal> value);
    partial void OntarifDoubleChanged();
    partial void OntarifTripleChanging(System.Nullable<decimal> value);
    partial void OntarifTripleChanged();
    partial void OntarifQuadrupleChanging(System.Nullable<decimal> value);
    partial void OntarifQuadrupleChanged();
    partial void OnNbChambreResChanging(System.Nullable<decimal> value);
    partial void OnNbChambreResChanged();
    #endregion
		
		public voyage()
		{
			this._contrat = new EntitySet<contrat>(new Action<contrat>(this.attach_contrat), new Action<contrat>(this.detach_contrat));
			this._employe = default(EntityRef<employe>);
			this._hotel = default(EntityRef<hotel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voyNo", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal voyNo
		{
			get
			{
				return this._voyNo;
			}
			set
			{
				if ((this._voyNo != value))
				{
					this.OnvoyNoChanging(value);
					this.SendPropertyChanging();
					this._voyNo = value;
					this.SendPropertyChanged("voyNo");
					this.OnvoyNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voyDestination", DbType="Char(20)")]
		public string voyDestination
		{
			get
			{
				return this._voyDestination;
			}
			set
			{
				if ((this._voyDestination != value))
				{
					this.OnvoyDestinationChanging(value);
					this.SendPropertyChanging();
					this._voyDestination = value;
					this.SendPropertyChanged("voyDestination");
					this.OnvoyDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voyDateDepart", DbType="DateTime")]
		public System.Nullable<System.DateTime> voyDateDepart
		{
			get
			{
				return this._voyDateDepart;
			}
			set
			{
				if ((this._voyDateDepart != value))
				{
					this.OnvoyDateDepartChanging(value);
					this.SendPropertyChanging();
					this._voyDateDepart = value;
					this.SendPropertyChanged("voyDateDepart");
					this.OnvoyDateDepartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voyDateArrive", DbType="DateTime")]
		public System.Nullable<System.DateTime> voyDateArrive
		{
			get
			{
				return this._voyDateArrive;
			}
			set
			{
				if ((this._voyDateArrive != value))
				{
					this.OnvoyDateArriveChanging(value);
					this.SendPropertyChanging();
					this._voyDateArrive = value;
					this.SendPropertyChanged("voyDateArrive");
					this.OnvoyDateArriveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voyRepas", DbType="Decimal(1,0)")]
		public System.Nullable<decimal> voyRepas
		{
			get
			{
				return this._voyRepas;
			}
			set
			{
				if ((this._voyRepas != value))
				{
					this.OnvoyRepasChanging(value);
					this.SendPropertyChanging();
					this._voyRepas = value;
					this.SendPropertyChanged("voyRepas");
					this.OnvoyRepasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voyNbPlace", DbType="Decimal(3,0)")]
		public System.Nullable<decimal> voyNbPlace
		{
			get
			{
				return this._voyNbPlace;
			}
			set
			{
				if ((this._voyNbPlace != value))
				{
					this.OnvoyNbPlaceChanging(value);
					this.SendPropertyChanging();
					this._voyNbPlace = value;
					this.SendPropertyChanged("voyNbPlace");
					this.OnvoyNbPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voyActivite", DbType="Char(76)")]
		public string voyActivite
		{
			get
			{
				return this._voyActivite;
			}
			set
			{
				if ((this._voyActivite != value))
				{
					this.OnvoyActiviteChanging(value);
					this.SendPropertyChanging();
					this._voyActivite = value;
					this.SendPropertyChanged("voyActivite");
					this.OnvoyActiviteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empNo", DbType="Decimal(4,0)")]
		public System.Nullable<decimal> empNo
		{
			get
			{
				return this._empNo;
			}
			set
			{
				if ((this._empNo != value))
				{
					if (this._employe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnempNoChanging(value);
					this.SendPropertyChanging();
					this._empNo = value;
					this.SendPropertyChanged("empNo");
					this.OnempNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hotno", DbType="Decimal(5,0)")]
		public System.Nullable<decimal> hotno
		{
			get
			{
				return this._hotno;
			}
			set
			{
				if ((this._hotno != value))
				{
					if (this._hotel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhotnoChanging(value);
					this.SendPropertyChanging();
					this._hotno = value;
					this.SendPropertyChanged("hotno");
					this.OnhotnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tarifSimple", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> tarifSimple
		{
			get
			{
				return this._tarifSimple;
			}
			set
			{
				if ((this._tarifSimple != value))
				{
					this.OntarifSimpleChanging(value);
					this.SendPropertyChanging();
					this._tarifSimple = value;
					this.SendPropertyChanged("tarifSimple");
					this.OntarifSimpleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tarifDouble", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> tarifDouble
		{
			get
			{
				return this._tarifDouble;
			}
			set
			{
				if ((this._tarifDouble != value))
				{
					this.OntarifDoubleChanging(value);
					this.SendPropertyChanging();
					this._tarifDouble = value;
					this.SendPropertyChanged("tarifDouble");
					this.OntarifDoubleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tarifTriple", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> tarifTriple
		{
			get
			{
				return this._tarifTriple;
			}
			set
			{
				if ((this._tarifTriple != value))
				{
					this.OntarifTripleChanging(value);
					this.SendPropertyChanging();
					this._tarifTriple = value;
					this.SendPropertyChanged("tarifTriple");
					this.OntarifTripleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tarifQuadruple", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> tarifQuadruple
		{
			get
			{
				return this._tarifQuadruple;
			}
			set
			{
				if ((this._tarifQuadruple != value))
				{
					this.OntarifQuadrupleChanging(value);
					this.SendPropertyChanging();
					this._tarifQuadruple = value;
					this.SendPropertyChanged("tarifQuadruple");
					this.OntarifQuadrupleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NbChambreRes", DbType="Decimal(3,0)")]
		public System.Nullable<decimal> NbChambreRes
		{
			get
			{
				return this._NbChambreRes;
			}
			set
			{
				if ((this._NbChambreRes != value))
				{
					this.OnNbChambreResChanging(value);
					this.SendPropertyChanging();
					this._NbChambreRes = value;
					this.SendPropertyChanged("NbChambreRes");
					this.OnNbChambreResChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="voyage_contrat", Storage="_contrat", ThisKey="voyNo", OtherKey="voyNo")]
		public EntitySet<contrat> contrat
		{
			get
			{
				return this._contrat;
			}
			set
			{
				this._contrat.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employe_voyage", Storage="_employe", ThisKey="empNo", OtherKey="empNo", IsForeignKey=true)]
		public employe employe
		{
			get
			{
				return this._employe.Entity;
			}
			set
			{
				employe previousValue = this._employe.Entity;
				if (((previousValue != value) 
							|| (this._employe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employe.Entity = null;
						previousValue.voyage.Remove(this);
					}
					this._employe.Entity = value;
					if ((value != null))
					{
						value.voyage.Add(this);
						this._empNo = value.empNo;
					}
					else
					{
						this._empNo = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("employe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hotel_voyage", Storage="_hotel", ThisKey="hotno", OtherKey="hotNo", IsForeignKey=true)]
		public hotel hotel
		{
			get
			{
				return this._hotel.Entity;
			}
			set
			{
				hotel previousValue = this._hotel.Entity;
				if (((previousValue != value) 
							|| (this._hotel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hotel.Entity = null;
						previousValue.voyage.Remove(this);
					}
					this._hotel.Entity = value;
					if ((value != null))
					{
						value.voyage.Add(this);
						this._hotno = value.hotNo;
					}
					else
					{
						this._hotno = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("hotel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_contrat(contrat entity)
		{
			this.SendPropertyChanging();
			entity.voyage = this;
		}
		
		private void detach_contrat(contrat entity)
		{
			this.SendPropertyChanging();
			entity.voyage = null;
		}
	}
}
#pragma warning restore 1591
